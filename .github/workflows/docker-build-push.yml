name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate and Populate .env file
        run: |
          echo ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }} > .env
          echo APP_KEYS=${{ secrets.APP_KEYS }} >> .env
          echo DATABASE_CLIENT=${{ secrets.DATABASE_CLIENT }} >> .env
          echo DATABASE_HOST=${{ secrets.DATABASE_HOST }} >> .env
          echo DATABASE_NAME=${{ secrets.DATABASE_NAME }} >> .env
          echo DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} >> .env
          echo DATABASE_PORT=${{ secrets.DATABASE_PORT }} >> .env
          echo DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx inspect
          docker buildx build --platform linux/amd64,linux/arm64 -t mssalkhalifah/strapi:latest -t mssalkhalifah/strapi:${{ github.sha }} -f Dockerfile.prod .
          docker push mssalkhalifah/strapi:latest
          docker push mssalkhalifah/strapi:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Copy .env file to remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_SERVER_HOST }}
          username: ${{ secrets.REMOTE_SERVER_USERNAME }}
          key: ${{ secrets.REMOTE_SERVER_SSH_KEY }}
          port: ${{ secrets.REMOTE_SERVER_SSH_PORT }}
          script: |
            scp .env ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_HOST }}:/path/to/remote/directory/
